// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL") // Aseg√∫rate de tener esta variable en tu archivo .env
}

model Clientes {
  cliente_id        Int       @id @default(autoincrement())
  nombres           String    @db.VarChar(50)
  apellido_paterno  String    @db.VarChar(50)
  apellido_materno  String    @db.VarChar(50)
  correo            String    @db.VarChar(100)
  telefono          String    @db.VarChar(15)
  dni               String    @db.VarChar(10)
  cargo_actual      String    @db.VarChar(50)
  area_actual       String    @db.VarChar(50)
  empresa_id        Int
  empresa           Empresas  @relation(fields: [empresa_id], references: [empresa_id])
  cliente_pruebas   ClientePruebas[]

  @@map("clientes") // Mapea el nombre de la tabla en la base de datos
}

model Empresas {
  empresa_id       Int           @id @default(autoincrement())
  nombre_empresa   String        @db.VarChar(100)
  clientes         Clientes[]

  @@map("empresas") // Mapea el nombre de la tabla en la base de datos
}

model Pruebas {
  prueba_id        Int            @id @default(autoincrement())
  tipo_prueba      String         @db.VarChar(50)
  link             String         @db.VarChar(255)
  usuario          String?        @db.VarChar(50)  // Permite NULL
  clave            String?        @db.VarChar(50)  // Permite NULL
  cliente_pruebas  ClientePruebas[]

  @@map("pruebas") // Mapea el nombre de la tabla en la base de datos
}

model ClientePruebas {
  cliente_id        Int
  prueba_id         Int
  inicio_assessment DateTime
  fin_assessment    DateTime
  cliente           Clientes  @relation(fields: [cliente_id], references: [cliente_id])
  prueba            Pruebas   @relation(fields: [prueba_id], references: [prueba_id])

  @@id([cliente_id, prueba_id]) // Clave primaria compuesta
  @@map("cliente_pruebas") // Mapea el nombre de la tabla en la base de datos
}